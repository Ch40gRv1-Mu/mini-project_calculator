{"ast":null,"code":"var _jsxFileName = \"/Users/mcr/Desktop/NUS/NUS_2022/RA/calculator/web_frontend_react/calculator_front_end/src/Calculator.js\";\nimport React from 'react';\nimport CalculatorPanel from './CalculatorPanel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      result: \"\",\n      numbers: [\"\", \"\"],\n      numberIdx: 0,\n      operation: \"\"\n    };\n  }\n\n  operationHandler(operation) {\n    if (this.state.numberIdx === 1) {\n      this.equalHandler();\n      return;\n    }\n\n    if ((operation === \"subtract\" || operation === \"add\") && this.state.numbers[this.state.numberIdx] === \"\") {\n      this.numberHandler(operation === \"subtract\" ? \"-\" : \"+\");\n      return;\n    }\n\n    this.setOperation(operation);\n  }\n\n  numberHandler(number) {\n    const newNumber = this.state.numbers[this.state.numberIdx] + number;\n    this.updateNumber(newNumber);\n  }\n\n  dotHandler() {\n    const newNumber = this.state.numbers[this.state.numberIdx] + \".\";\n\n    if (isNaN(newNumber)) {\n      return;\n    }\n\n    this.updateNumber(newNumber);\n  }\n\n  clearHandler() {\n    this.setState({\n      result: \"\",\n      numbers: [\"\", \"\"],\n      numberIdx: 0\n    });\n  }\n\n  equalHandler() {\n    if (this.state.numbers[0] === \"\" || this.state.numbers[1] === \"\") {\n      return;\n    }\n\n    this.props.calculatorApi.calculate(this.state.numbers[0], this.state.numbers[1], this.state.operation, result => {\n      this.setResult(result);\n    });\n  }\n\n  updateNumber(newNumber) {\n    var newNumbers = this.state.numbers;\n    newNumbers[this.state.numberIdx] = newNumber;\n    this.setState({\n      result: newNumbers[this.state.numberIdx],\n      numbers: newNumbers\n    });\n  }\n\n  setOperation(operation) {\n    this.setState({\n      operation: operation\n    });\n    this.nextNumber();\n  }\n\n  nextNumber() {\n    const newIdx = this.state.numberIdx === 0 ? 1 : 0;\n    this.setState({\n      result: this.state.numbers[newIdx],\n      numberIdx: newIdx\n    });\n  }\n\n  setResult(result) {\n    const newNumbers = [result, \"\"];\n    const newNumberIdx = 0;\n    this.setState({\n      result: newNumbers[newNumberIdx],\n      numbers: newNumbers,\n      numberIdx: newNumberIdx,\n      operation: \"\"\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calculator-grid-container\",\n      children: /*#__PURE__*/_jsxDEV(CalculatorPanel, {\n        result: this.state.result,\n        numberClicked: this.numberHandler.bind(this),\n        operationClicked: this.operationHandler.bind(this),\n        dotClicked: this.dotHandler.bind(this),\n        equalClicked: this.equalHandler.bind(this),\n        clearClicked: this.clearHandler.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Calculator;","map":{"version":3,"sources":["/Users/mcr/Desktop/NUS/NUS_2022/RA/calculator/web_frontend_react/calculator_front_end/src/Calculator.js"],"names":["React","CalculatorPanel","Calculator","Component","constructor","props","state","result","numbers","numberIdx","operation","operationHandler","equalHandler","numberHandler","setOperation","number","newNumber","updateNumber","dotHandler","isNaN","clearHandler","setState","calculatorApi","calculate","setResult","newNumbers","nextNumber","newIdx","newNumberIdx","render","bind"],"mappings":"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","sourcesContent":["import React from 'react'\nimport CalculatorPanel from './CalculatorPanel'\n\nclass Calculator extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      result: \"\",\n      numbers: [\"\", \"\"],\n      numberIdx: 0,\n      operation: \"\",\n    };\n  }\n\n  operationHandler(operation) {\n    if(this.state.numberIdx === 1) {\n      this.equalHandler();\n      return;\n    }\n\n    if( (operation === \"subtract\" || operation === \"add\") &&\n          this.state.numbers[this.state.numberIdx] === \"\") {\n      this.numberHandler(operation === \"subtract\" ? \"-\" : \"+\");\n      return;\n    }\n\n    this.setOperation(operation);\n  }\n\n  numberHandler(number) {\n    const newNumber = this.state.numbers[this.state.numberIdx] + number;\n    this.updateNumber(newNumber);\n  }\n\n  dotHandler() {\n    const newNumber = this.state.numbers[this.state.numberIdx] + \".\";\n    if(isNaN(newNumber)) {\n      return\n    } \n    this.updateNumber(newNumber);\n  }\n\n  clearHandler() {\n    this.setState({\n      result: \"\",\n      numbers: [\"\", \"\"],\n      numberIdx: 0,\n    });\n  }\n  \n  equalHandler() {\n    if(this.state.numbers[0] === \"\" || this.state.numbers[1] === \"\") {\n      return\n    }\n    this.props.calculatorApi.calculate(\n      this.state.numbers[0], \n      this.state.numbers[1], \n      this.state.operation, \n      (result)=> {\n        this.setResult(result);\n      });\n  }\n\n  updateNumber(newNumber) {\n    var newNumbers = this.state.numbers;\n    newNumbers[this.state.numberIdx] = newNumber;\n    this.setState({\n      result: newNumbers[this.state.numberIdx],\n      numbers: newNumbers,\n    });\n  }\n\n  setOperation(operation){\n    this.setState({operation: operation});\n    this.nextNumber();\n  }\n\n  nextNumber() {\n    const newIdx = this.state.numberIdx === 0 ? 1 : 0;\n    this.setState({\n      result: this.state.numbers[newIdx],\n      numberIdx: newIdx,\n    });\n  }\n\n  setResult(result){\n    const newNumbers = [result, \"\"];\n    const newNumberIdx = 0;\n    this.setState({\n      result: newNumbers[newNumberIdx],\n      numbers: newNumbers,\n      numberIdx: newNumberIdx,\n      operation: \"\",\n    });\n  }\n\n  render() {\n    return (\n        <div className=\"calculator-grid-container\">\n          <CalculatorPanel \n            result={this.state.result} \n            numberClicked={this.numberHandler.bind(this)}\n            operationClicked={this.operationHandler.bind(this)}\n            dotClicked={this.dotHandler.bind(this)}\n            equalClicked={this.equalHandler.bind(this)}\n            clearClicked={this.clearHandler.bind(this)}\n            />\n        </div>\n      );\n  }\n}\n\nexport default Calculator;"]},"metadata":{},"sourceType":"module"}