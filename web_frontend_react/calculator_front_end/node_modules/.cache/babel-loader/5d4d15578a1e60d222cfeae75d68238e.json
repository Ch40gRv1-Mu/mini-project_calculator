{"ast":null,"code":"var _jsxFileName = \"/Users/mcr/Desktop/NUS/NUS_2022/RA/calculator/web_frontend_react/calculator_front_end/src/Calculator.js\";\nimport React from 'react';\nimport CalculatorPanel from './CalculatorPanel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      retult: \"\",\n      numbers: [\"\", \"\"],\n      numberIdx: 0,\n      operation: \"\"\n    };\n  }\n\n  operationHandler(operation) {\n    if (this.state.numberIdx === 1) {\n      this.equalHandler();\n      return;\n    }\n\n    if ((operation === \"subtract\" || operation === \"add\") && this.state.numbers[this.state.numberIdx] == \"\") {\n      this.numberHandler(operation === \"subtract\" ? \"-\" : \"+\");\n      return;\n    }\n\n    this.setOperation(operation);\n  }\n\n  setOperation(operation) {\n    this.setState({\n      operation: operation\n    });\n  }\n\n  nextNumber() {\n    const newIdx = this.state.numberIdx === 0 ? 1 : 0;\n    this.setState({\n      result: this.state.numbers[newIdx],\n      numberIdx: newIdx\n    });\n  }\n\n  numberHandler(number) {\n    const newNumber = this.state.numbers[this.state.numberIdx] + number;\n    this.updateNumber(newNumber);\n  }\n\n  updateNumber(newNumber) {\n    var newNumbers = this.state.numbers;\n    newNumbers[this.state.numberIdx] = newNumber;\n    this.setState({\n      result: newNumbers[this.state.numberIdx],\n      numbers: newNumbers\n    });\n  }\n\n  dotHandler() {\n    const newNumber = this.state.numbers[this.state.numberIdx] + \".\";\n\n    if (isNaN(newNumber)) {\n      return;\n    }\n\n    this.updateNumber(newNumber);\n  }\n\n  clearHandler() {\n    this.setState({\n      result: \"\",\n      numbers: [\"\", \"\"],\n      numberIdx: 0\n    });\n  }\n\n  equalHandler() {\n    if (this.state.number[0] === \"\" || this.state.number[1] === \"\") {\n      return;\n    }\n\n    this.props.calculatorApi.calculator(this.state.numbers[0], this.state.numbers[1], this.state.operation, result => {\n      this.setResult(result);\n    });\n  }\n\n  setResult(result) {\n    const newNumbers = [result, \"\"];\n    const newNumberIdx = 0;\n    this.setState({\n      result: newNumbers[newNumberIdx]\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calculator-grid-container\",\n      children: /*#__PURE__*/_jsxDEV(CalculatorPanel, {\n        result: this.state.result,\n        numberClicked: this.numberHandler.blind(this),\n        operationClicked: this.operationHandler.blind(this),\n        dotClicked: this.dotHandler.blind(this),\n        clearClicked: this.clearHandler.blind(this),\n        equalClicked: this.equalHandler.blind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Calculator;","map":{"version":3,"sources":["/Users/mcr/Desktop/NUS/NUS_2022/RA/calculator/web_frontend_react/calculator_front_end/src/Calculator.js"],"names":["React","CalculatorPanel","Calculator","Component","constructor","props","state","retult","numbers","numberIdx","operation","operationHandler","equalHandler","numberHandler","setOperation","setState","nextNumber","newIdx","result","number","newNumber","updateNumber","newNumbers","dotHandler","isNaN","clearHandler","calculatorApi","calculator","setResult","newNumberIdx","render","blind"],"mappings":"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","sourcesContent":["import React from 'react';\nimport CalculatorPanel from './CalculatorPanel'\n\nclass Calculator extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            retult: \"\",\n            numbers: [\"\",\"\"],\n            numberIdx: 0,\n            operation: \"\",\n        };\n    }\n\n\n    operationHandler(operation){\n\n        if (this.state.numberIdx === 1){\n            this.equalHandler();\n            return;\n        }\n\n        if ((operation === \"subtract\" || operation === \"add\") && this.state.numbers[this.state.numberIdx]==\"\")\n        {\n            this.numberHandler(operation === \"subtract\" ? \"-\" : \"+\");\n            return\n        }\n        this.setOperation(operation);\n    }\n\n    setOperation(operation){\n        this.setState({\n            operation: operation\n        });\n    }\n\n    nextNumber(){\n        const newIdx = this.state.numberIdx ===0 ? 1: 0;\n        this.setState({\n            result: this.state.numbers[newIdx],\n            numberIdx:newIdx,\n        })\n    }\n\n    numberHandler(number){\n        const newNumber = this.state.numbers[this.state.numberIdx] + number;\n        this.updateNumber(newNumber);\n\n    }\n\n    updateNumber(newNumber){\n        var newNumbers = this.state.numbers;\n        newNumbers[this.state.numberIdx] = newNumber;\n        this.setState({\n            result: newNumbers[this.state.numberIdx],\n            numbers: newNumbers,\n\n        });\n    }\n\n    dotHandler(){\n        const newNumber = this.state.numbers[this.state.numberIdx] + \".\"\n        if (isNaN(newNumber)){\n            return;\n        }\n        this.updateNumber(newNumber);\n    }\n\n    clearHandler(){\n        this.setState({\n            result: \"\",\n            numbers: [\"\", \"\"], \n            numberIdx: 0,\n        });\n\n\n    }\n\n    equalHandler(){\n        if(this.state.number[0] === \"\" || this.state.number[1] === \"\"){\n            return;\n        }\n        this.props.calculatorApi.calculator(\n            this.state.numbers[0], \n            this.state.numbers[1], \n            this.state.operation,\n            (result)=>{\n                this.setResult(result);\n            });\n    }\n\n    setResult(result){\n        const newNumbers = [result, \"\"];\n        const newNumberIdx = 0;\n        this.setState({\n            result : newNumbers[newNumberIdx],\n\n        })\n    } \n\n    render(){\n        return(\n            <div className=\"calculator-grid-container\">\n                <CalculatorPanel\n                    result = {this.state.result}\n                    numberClicked = {this.numberHandler.blind(this)}\n                    operationClicked = {this.operationHandler.blind(this)}\n                    dotClicked = {this.dotHandler.blind(this)}\n                    clearClicked = {this.clearHandler.blind(this)}\n                    equalClicked = {this.equalHandler.blind(this)}\n\n                />\n            </div>\n        )\n    }\n}\n\nexport default Calculator;"]},"metadata":{},"sourceType":"module"}